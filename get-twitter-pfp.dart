import 'dart:io';
import 'dart:convert';
import 'package:http/http.dart' as http;

final File members = new File('./src/members.txt');
final File membersJs = new File('./src/js/members.js');
const String token =
    'Bearer AAAAAAAAAAAAAAAAAAAAAOtrTAEAAAAAlR8uf7KnMxkGImintJZLim9lWeM%3DRcWyBqEdzJIymhIiWZBpXmTyzV1YOqACCv2j5JQJ2yzbnT8qNV';
String membersString = '';
Map membersMap = {};

Future<void> read_members() async {
  try {
    if (await members.exists()) {
      await members.readAsLines().then((lines) => lines.forEach((line) {
            List lineList = line.split(",");
            membersString += lineList[0].toLowerCase() + ',';
            membersMap[lineList[0].toLowerCase()] = {
              'name': lineList[1],
            };
          }));
      membersString = membersString.substring(0, membersString.length - 1);
    }
  } catch (err) {
    print('Caught error: $err');
  }


  print('membersString');
  print(membersString);
}

Future<void> get_pfps() async {
  const Map<String, String> headers = {
    'User-Agent': '0xVenturesWebsite',
    'authorization': token,
  };

  // var url = Uri.parse('https://api.twitter.com/2/users/by?usernames=' + membersString + '&user.fields=profile_image_url');
  Uri url = Uri.parse('https://api.twitter.com/2/users/by?usernames=' +
      membersString +
      '&user.fields=profile_image_url');
  var response = await http.get(url, headers: headers);
  var decodedResponse = jsonDecode(utf8.decode(response.bodyBytes)) as Map;

  // print('Response status: ${response.statusCode}');
  // print('Response body: ${response.body}');
  print("decodedResponse['data']");
  print(decodedResponse['data']);

  decodedResponse['data'].forEach((pfp) {
    //print('pfp');
    //print(pfp);
    //print(membersMap[pfp['username'].toLowerCase()]);
    membersMap[pfp['username'].toLowerCase()]['profile_image_url'] =
        pfp['profile_image_url'];
  });
}

Future<void> save_pfps() async {

}

Future<void> write_members_js() async {
  String members_file_string =
      '//\n// This file is generated by get-twitter-pfp.dart\n//\n\n'
      'const members = [\n';

  print(membersMap);

  membersMap.forEach((member, memberMap) {
    memberMap['profile_image_url'] ??= '';

    members_file_string += '["' +
        member +
        '", "' +
        memberMap['name'] +
        '", "' +
        memberMap['profile_image_url'] +
        '"],\n';
  });

  members_file_string += '];\n\n' 'export default members;';

  var members_generated = await File('./src/js/members-generated.js')
      .writeAsString(members_file_string);

  print('members_generated.exists()');
  print(await members_generated.exists());
  print(await members_generated.length());
}

Future<void> main() async {
  await read_members();
  await get_pfps();
  await write_members_js();
}
